---
- hosts: all
   
  tasks: 
  
  - name: Create new users "pentaho"
    user:
     name: pentaho
     comment: "pentaho user"
     password: "{{  'pentaho' | password_hash('sha512') }}"
     
  - name: Set authorized key took from file
    authorized_key:
     user: pentaho
     state: present
     key: "{{ lookup('file', '../files/clai-id-rsa.pub') }}"
  
  - file:
     path: '/ansible_home/files/clai-id-rsa'
     mode: 0400
     connection:local

  - name: Download Pentaho files
    get_url:
     url: http://gitlab.hds-cloudconnect.com:8008/pentaho-business-analytics-7.1.0.0-12-x64.bin
     #url: http://10.16.99.13:8008/pentaho-business-analytics-7.1.0.0-12-x64.bin
     dest: /home/pentaho

  - name: Change file owner and permission
    file: path=/home/pentaho/pentaho-business-analytics-7.1.0.0-12-x64.bin state=file mode="a+x" owner=pentaho group=pentaho

  - name: Enable port 8080 on firewall
    firewalld:
     port: 8080/tcp
     permanent: true
     state: enabled
     immediate: yes
    ignore_errors: true
  
  #- name: Install Pentaho
  #  command: "/home/pentaho/pentaho-business-analytics-7.1.0.0-12-x64.bin --mode unattended --postgres_password pentaho"
  #  become: true
  #  become_user: pentaho
  
  - name: install Pentaho
    local_action: command ssh -i files/clai-id-rsa pentaho@{{ ansible_ssh_host }} '/home/pentaho/pentaho-business-analytics-7.1.0.0-12-x64.bin --mode unattended --postgres_password pentaho'
  
  - name: Start Pentaho Service on boot
    shell: "echo @reboot /home/pentaho/Pentaho/ctlscript.sh start >> /var/spool/cron/pentaho"

  - name: install gnome x windows
    yum: state=latest name={{ item }} update_cache=yes
    with_items:
     - "@X Window System"
     - "gnome-classic-session"
     - "gnome-terminal"
     - "control-center"
     - "liberation-mono-fonts"
     
  - name: unlink
    shell: "unlink /etc/systemd/system/default.target & ln -sf /lib/systemd/system/graphical.target /etc/systemd/system/default.target"
   
  - name: reboot
    command: /sbin/shutdown -r 0
    async: 0
    poll: 0
    ignore_errors: true

  - name: Restarting the server ...
    wait_for:
      port: 22
      host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
      search_regex: OpenSSH
      delay: 10
    connection: local
